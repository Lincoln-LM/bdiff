name: Release

on:
    release:
      types: [created]

env:
  CARGO_TERM_COLOR: always
  CARGO_BIN_NAME: bdiff
  CARGO_TARGET_DIR: target

jobs:
  build:
      name: Build
      strategy:
        matrix:
          include:
            - platform: ubuntu-latest
              target: x86_64-unknown-linux-gnu
              name: linux-x86_64
              packages: libgtk-3-dev
            - platform: windows-latest
              target: x86_64-pc-windows-msvc
              name: windows-x86_64
            - platform: macos-latest
              target: x86_64-apple-darwin
              name: macos-x86_64
            - platform: macos-latest
              target: aarch64-apple-darwin
              name: macos-arm64
        fail-fast: false
      runs-on: ${{ matrix.platform }}
      steps:
        - name: Install dependencies
          if: matrix.packages != ''
          run: |
            sudo apt-get update
            sudo apt-get -y install ${{ matrix.packages }}
        - name: Checkout
          uses: actions/checkout@v3
        - name: Setup Rust toolchain
          uses: dtolnay/rust-toolchain@stable
          with:
            targets: ${{ matrix.target }}
        - name: Cargo build
          run: cargo build --release --all-features --target ${{ matrix.target }} --bin ${{ env.CARGO_BIN_NAME }}
        - name: Upload artifacts
          uses: actions/upload-artifact@v3
          with:
            name: ${{ matrix.name }}
            path: |
              ${{ env.CARGO_TARGET_DIR }}/release/${{ env.CARGO_BIN_NAME }}
              ${{ env.CARGO_TARGET_DIR }}/release/${{ env.CARGO_BIN_NAME }}.exe
              ${{ env.CARGO_TARGET_DIR }}/${{ matrix.target }}/release/${{ env.CARGO_BIN_NAME }}
              ${{ env.CARGO_TARGET_DIR }}/${{ matrix.target }}/release/${{ env.CARGO_BIN_NAME }}.exe
            if-no-files-found: error

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts
      - name: Rename artifacts
        working-directory: artifacts
        run: |
          mkdir ../out
          for i in */*/release/$CARGO_BIN_NAME*; do
            mv "$i" "../out/$(sed -E "s/([^/]+)\/[^/]+\/release\/($CARGO_BIN_NAME)/\2-\1/" <<< "$i")"
          done
          ls -R ../out
      - name: Update release
        uses: johnwbyrd/update-release@v1.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          files: out/*